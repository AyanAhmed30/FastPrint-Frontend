name: 🚀 Deploy Frontend to EC2

on:
  push:
    branches:
      - main  # or your frontend deployment branch

jobs:
  deploy:
    name: Deploy FastPrint Frontend
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy Frontend with Nginx Integration
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Exit on any error
            
            echo "🚀 Starting Frontend Deployment..."
            
            # Navigate to the correct frontend directory
            FRONTEND_DIR="$HOME/FastPrint-Frontend"
            if [ ! -d "$FRONTEND_DIR" ]; then
              echo "❌ Frontend directory not found at $FRONTEND_DIR"
              echo "📁 Available directories in home:"
              ls -la $HOME/
              exit 1
            fi
            
            cd "$FRONTEND_DIR"
            echo "📍 Current directory: $(pwd)"
            
            # Pull latest changes
            echo "📥 Pulling latest changes..."
            git pull origin main
            
            # Navigate to the actual frontend app directory
            cd fastprint-frontend
            echo "📍 Frontend app directory: $(pwd)"
            
            # Stop existing frontend container gracefully
            echo "🛑 Stopping existing frontend container..."
            docker stop fastprint-frontend 2>/dev/null || echo "No existing container to stop"
            docker rm fastprint-frontend 2>/dev/null || echo "No existing container to remove"
            
            # Build new frontend image
            echo "🔨 Building frontend Docker image..."
            docker build -t fastprint-frontend .
            
            # Start new frontend container on port 3000 (as expected by Nginx)
            echo "🚀 Starting frontend container..."
            docker run -d --name fastprint-frontend -p 3000:80 fastprint-frontend
            
            # Wait for container to be ready
            echo "⏳ Waiting for frontend to be ready..."
            sleep 10
            
            # Health check
            echo "🔍 Performing health check..."
            if curl -f http://localhost:3000/ > /dev/null 2>&1; then
              echo "✅ Frontend is running and accessible on port 3000"
            else
              echo "❌ Frontend health check failed"
              echo "📋 Container logs:"
              docker logs fastprint-frontend --tail 20
              exit 1
            fi
            
            echo "🎉 Frontend deployment completed successfully!"
          EOF

      - name: ✅ Validate Frontend Deployment
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Check if frontend container is running
            if ! docker ps | grep -q "fastprint-frontend.*Up"; then
              echo "❌ Frontend container is not running"
              docker logs fastprint-frontend
              exit 1
            fi
            
            # Check if frontend is responding on port 3000
            if ! curl -f http://localhost:3000/ > /dev/null 2>&1; then
              echo "❌ Frontend is not responding on port 3000"
              docker logs fastprint-frontend
              exit 1
            fi
            
            # Check if frontend is accessible through Nginx (if SSL is configured)
            if curl -f https://app.fastprintguys.com/ > /dev/null 2>&1; then
              echo "✅ Frontend is accessible through Nginx with HTTPS"
            elif curl -f http://app.fastprintguys.com/ > /dev/null 2>&1; then
              echo "✅ Frontend is accessible through Nginx with HTTP"
            else
              echo "⚠️ Frontend may not be accessible through Nginx - check configuration"
            fi
            
            echo "✅ Frontend deployment validation completed"
          EOF

      - name: 🔄 Reload Nginx Configuration
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Validate Nginx configuration
            if sudo nginx -t; then
              echo "✅ Nginx configuration is valid"
              # Reload Nginx to ensure it picks up any changes
              sudo systemctl reload nginx
              echo "✅ Nginx reloaded successfully"
            else
              echo "❌ Nginx configuration validation failed"
              exit 1
            fi
          EOF
